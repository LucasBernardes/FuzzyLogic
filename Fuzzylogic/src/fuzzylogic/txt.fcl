/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

//VAR_INPUT
	//behavior : REAL;
	//age : REAL;
	//character : REAL;
	//publicity : REAL;
	//education : REAL;
//END_VAR

VAR_INPUT				// Define input variables
	behavior : REAL;
	age : REAL;
	education : REAL;
	publicity : REAL;
	//character : REAL;
	//service : REAL;
	//food : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	score : REAL;
	//tip : REAL;
END_VAR

FUZZIFY behavior
	TERM terrible := (0, 1) (4, 0);
	TERM bad := (1, 0) (4, 1) (6,1) (8, 0);
	TERM medium := (7, 0) (8, 1) (9, 0);
	TERM good := (9,0) (10, 1);
END_FUZZIFY

FUZZIFY age
	TERM bad := (0, 1) (25, 0) (75, 0) (100, 1);	//less_than_25
	TERM medium := (25, 0) (30, 1) (35,1) (40, 0) (60, 0) (65, 1) (70, 1) (75, 0);	//25_to_40
	TERM good := (40, 0) (45, 1) (60, 1) (65, 0);	//40_to_65
	//TERM medium := (60, 0) (65, 1) (70, 1) (75, 0);	//60_to_75
	//TERM bad := (75, 0) (100, 1);	//greater_than_75
END_FUZZIFY

FUZZIFY education
	TERM bad := (0, 0) (9, 1) (9, 0);	//till 9th - ate ensino fundamental completo
	TERM good := (9, 0) (12, 1) (12, 0);	//till 12th - ate ensino medio completo
	TERM better := (12, 0) (17, 1) (17, 0);	//till 17th - ate faculdade completa
	TERM best := (17, 0) (20, 1);	//after 17th - mais que faculdade
END_FUZZIFY

FUZZIFY publicity	//eleicoes internas do partido
	TERM terrible := (0, 1) (10, 0);
	TERM bad := (10, 0) (15, 1) (25, 1) (30, 0);
	TERM medium := (30, 0) (35, 1) (45, 1) (50, 0);
	TERM good := (50 ,0) (55, 1) (100, 1);
END_FUZZIFY

/*
FUZZIFY character
	TERM bad := (0, 1) (1, 0);
	TERM medium := (1, 0) (2, 1) (3, 1) (4, 0);
	TERM good := (4, 0) (5, 1);
END_FUZZIFY
*/

/*
FUZZIFY service			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM poor := (0, 1) (40, 0) ; 
	TERM good := (10, 0) (40,1) (60,1) (90,0);
	TERM excellent := (60, 0) (90, 1);
END_FUZZIFY

FUZZIFY food			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM rancid := (0, 1) (1, 1) (3,0) ;
	TERM delicious := (7,0) (9,1);
END_FUZZIFY
*/

DEFUZZIFY score			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM low := (0,0) /*(0,1)*/ (17,1) /*(33,1)*/ (33,0);
	TERM average := (33,0) /*(33,1)*/ (47, 1) /*(66,1)*/ (66,0);
	TERM high := (66,0) /*(66,1)*/ (87, 1) /*(100,1)*/ (100,0);
	METHOD : COA;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

/*
DEFUZZIFY tip			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM cheap := (0,0) (5,1) (10,0);
	TERM average := (10,0) (15,1) (20,0);
	TERM generous := (20,0) (25,1) (30,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY
*/

RULEBLOCK No1 //TODO
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF behavior IS terrible OR publicity IS terrible THEN score IS low;

	RULE 2 : IF behavior IS bad OR age IS bad THEN score IS low;
	RULE 3 : IF behavior IS medium THEN score IS average; 
	RULE 4 : IF behavior IS good AND publicity IS good THEN score IS high;

	/*RULE 1 : IF service IS poor OR food IS rancid THEN tip IS cheap;
	RULE 2 : IF service IS good THEN tip IS average; 
	RULE 3 : IF service IS excellent AND food IS delicious THEN tip IS generous;
	*/
    //RULE 4 : IF behavior IS bad AND food IS delicious THEN tip IS cheap;
END_RULEBLOCK

END_FUNCTION_BLOCK


