/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	behavior : REAL;
	age : REAL;
	education : REAL;
	publicity : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	score : REAL;
END_VAR

FUZZIFY behavior
	TERM terrible := (0, 1) (4, 0);
	TERM bad := (1, 0) (4, 1) (6,1) (8, 0);
	TERM medium := (7, 0) (8, 1) (9, 0);
	TERM good := (9,0) (10, 1);
END_FUZZIFY

FUZZIFY age
	TERM bad := (0, 1) (25, 0) (75, 0) (100, 1);	//less_than_25
	TERM medium := (25, 0) (30, 1) (35,1) (40, 0) (60, 0) (65, 1) (70, 1) (75, 0);	//25_to_40
	TERM good := (40, 0) (45, 1) (60, 1) (65, 0);	//40_to_65
	//TERM medium := (60, 0) (65, 1) (70, 1) (75, 0);	//60_to_75
	//TERM bad := (75, 0) (100, 1);	//greater_than_75
END_FUZZIFY

FUZZIFY education
	TERM bad := (0, 0) (9, 1) (9, 0);	//till 9th - ate ensino fundamental completo
	TERM good := (9, 0) (12, 1) (12, 0);	//till 12th - ate ensino medio completo
	TERM better := (12, 0) (17, 1) (17, 0);	//till 17th - ate faculdade completa
	TERM best := (17, 0) (20, 1);	//after 17th - mais que faculdade
END_FUZZIFY

FUZZIFY publicity	//eleicoes internas do partido
	TERM terrible := (0, 1) (10, 0);
	TERM bad := (10, 0) (15, 1) (25, 1) (30, 0);
	TERM medium := (30, 0) (35, 1) (45, 1) (50, 0);
	TERM good := (50 ,0) (55, 1) (100, 1);
END_FUZZIFY

DEFUZZIFY score			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM vlow := (0,0) (6.6,1) (13.3,0);
	TERM low := (13.3,0) (26.3,1) (39.6,0);
	TERM average := (39.6,0) (52.9, 1) (66.2,0);
	TERM high := (66.2,0) (76.2, 1) (86.2,0);
	TERM vhigh := (86.2,0) (92.8, 1) (100,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1 //TODO
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF publicity IS terrible AND behavior IS terrible THEN score IS vlow;
	RULE 2 : IF publicity IS terrible AND behavior IS bad AND education IS best AND age IS good THEN score IS low;
	RULE 3 : IF publicity IS bad AND behavior IS terrible THEN score IS vlow;
	RULE 4 : IF publicity IS bad AND behavior IS terrible AND education IS better AND age IS good THEN score IS low;


	RULE 5 : IF publicity IS bad AND behavior IS bad THEN score IS low;
	RULE 6 : IF publicity IS bad AND behavior IS medium AND education IS best AND age IS good THEN score IS average;
	RULE 7 : IF publicity IS medium AND behavior IS bad THEN score IS low;
	RULE 8 : IF publicity IS medium AND behavior IS bad AND education IS better AND age IS good THEN score IS average;


	RULE 9 : IF publicity IS medium AND behavior IS medium THEN score IS average;
	RULE 10 : IF publicity IS medium AND behavior IS good AND education IS best AND age IS good THEN score IS high;
	RULE 11 : IF publicity IS good AND behavior IS medium THEN score IS average;
	RULE 12 : IF publicity IS good AND behavior IS medium AND education IS better AND age IS good THEN score IS high;

	
	RULE 13 : IF publicity IS good AND behavior IS good THEN score IS high;
	RULE 14 : IF publicity IS good AND behavior IS good AND education IS best AND age IS medium THEN score IS vhigh;
	RULE 15 : IF publicity IS good AND behavior IS good AND education IS better AND age IS good THEN score IS vhigh;
	
END_RULEBLOCK

END_FUNCTION_BLOCK

